{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9340\viewh10300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Discussion Profiler 6.14.2005\
\
Discussion with Dan, Jignesh, Katie\
\
What to do about Profilers.\
\
Profiler is unique in that we may want multiple instances of the unit at the same time.  For example, timers, tracers, memory.  The issue was how can you cleanly use timers and tracers but not memory.  Where should the stubs sit?  Is profiler just an organizational directory?  If you make Timers, Tracers and Memory separate units then are you stuck with the clunky calls\
\
Timer_start()\
Tracer_start()\
Memory_start()\
call hydro_1d()\
Timer_stop()\
Tracer_stop()\
Memory_stop()\
\
This is ugly.  The alternative is to call a simple Profiler_start() which somehow\
under the hood understands if the user has specified timers, tracers or both to be included.  The implementation though, is more difficult.  Where to put the stubs?\
\
\
monitors\
	-Profiler\
		-Timers\
		-Tracers\
		-Memory\
\
but each one needs its own data file, Profiler_data....\
\
After much discussion we decided that flash shouldn't reinvent the monitoring wheel.  There are many good programs out there and flash isn't going to be able to compare.  Tau, Jumpshot, Vampir.  These are all PerfomanceTools that will be used exclusively.  We decided Timers should stand on their own in Flash.  \
\
our directory tree looks like this now\
\
	monitors\
		*Timers\
		*PerformanceTools\
			-Tau\
			-Jumpshot\
			-Vampir}