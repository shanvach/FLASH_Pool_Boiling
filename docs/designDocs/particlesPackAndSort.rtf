{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Pack and Sort Particles Algorithm\
\
start = 0 ! start at the beginning of the list\
\
! find the first inversion\
while start < localNumParticles do \
	i = next_non_hole(start)\
	j = next_non_hole(i+1)\
\
	!check if i < j --> then we have an inversion\
\
	if A(i) < A(j) then\
		start = j;\
		continue;  ! back to while start < localNumParticles\
	end if\
\
	! we have found an inversion\
	item = A[j]\
	k = Find_loc(item) ! binary search with holes!\
	hole_loc = k\
	while not_hole(A[hole_loc]) hile_loc++;\
\
	!have hole at location hole_loc\
	!rotate A[k .. hole_loc]\
\
	for j = hole_loc -1 down to k\
		A[j+1] = A[j]\
\
	! now hole at loc k: plug it\
\
	A[k] = item\
\
	start = j\
\
end while loop\
\
Now pack the particles without getting them out of order!\
\
hole = 0\
while hole < n; do\
\
	hole = next_hole(hole)\
	loc = next_nonhole(hole+1)\
	if loc > n\
		hole = n\
	else\
		swap(A(loc), A(hole))\
		hole = hole + 1\
\
	end if	\
end while 	\
	\
	}