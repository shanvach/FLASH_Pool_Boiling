# Runtime parameters for the Rayleigh Benard Cavity problem.

gr_pmRpDivergenceFree = 1
gr_pmRpNfieldDivf = 2
gr_pmRpConsvFluxes = .TRUE.
gr_pmRpConsvFluxDensities = .FALSE.

# Simulation Controlling Parameters
Ra              = 1000.0
Pr              =    1.0
Re              =  100.0
coupled_transport = .false.

# Subgrid Scale model flag (0 no sgs model, 1 sgs model)
isgs            = 0

# Grid dimensionality and geometry
geometry	= "cartesian"

# Size of computational volume
xmin		=  0.000000000000000
xmax		=  1.000000000000000
ymin		=  0.000000000000000
ymax		=  1.000000000000000
#zmin            =  0.000000000000000
#zmax            =  1.000000000000000

# Momentum Boundary conditions
xl_boundary_type = "noslip_ins"
xr_boundary_type = "noslip_ins"
yl_boundary_type = "noslip_ins"
yr_boundary_type = "movlid_ins"
#zl_boundary_type = "noslip_ins"
#zr_boundary_type = "noslip_ins"

# Temperature Wall Boundary Conditions
Twall_high = 0.0
Twall_low  = 1.0

# Simulation (grid, time, I/O) parameters
run_comment	= "Rayleigh Benard problem"
log_file	= "INS_Rayleigh_Benard.log"
basenm		= "INS_Rayleigh_Benard_"
restart         = .false.
#checkPointFileNumber=1
#plotFileNumber  = 1
nend            = 10000
tmax            = 60. 
cflflg          = 1
cfl             = 0.3
sigma		= 0.2
dtspec          = 1.0
dtinit          = 1.0
tstep_change_factor = 1.
pressure_correct= .true.

# Integration Scheme:
intschm            = 2

plot_var_1	= "pres"
plot_var_2      = "delp"
plot_var_3      = "temp"
  
pfft_setupOnce  = .false.
convertToConsvdInMeshInterp = .false.

checkpointFileIntervalTime = 20.
checkpointFileIntervalStep = 5000 

plotFileIntervalTime = 5.0
plotFileIntervalStep = 1000

## Pfft Parameters:
## Use Central Finite Difference discretization operator:
gr_pfftDiffOpDiscretize = 2
gr_mgDiffOpDiscretize   = 2

#-------WARNING: ONLY FOR UNIFORM GRID !!! ------------------------
#	The parameters below are only necessary for the Uniform Grid
#iGridSize	= 8	#defined as nxb * iprocs
#jGridSize	= 8	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 4	#number of procs in the i direction
jProcs		= 4	#number of procs in the j direction
kProcs		= 1	#number of procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
