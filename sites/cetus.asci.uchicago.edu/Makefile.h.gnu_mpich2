# FLASH makefile definitions for x86-64 Linux (GNU compilers)
#
# GCC-4.1.2, mpich2-1.1.1p1, HDF5-1.8.3, pnetcdf-1.0.3
#
#----------------------------------------------------------------------------
# Set the HDF/HDF5 library paths -- these need to be updated for your system
#----------------------------------------------------------------------------
HDF4_PATH =
HDF5_PATH = /opt/hdf5-1.8.3_mpich2-1.1.1p1

ZLIB_PATH  =

PAPI_PATH  =
PAPI_FLAGS =

NCMPI_PATH = /opt/pnetcdf-1.0.3_mpich2-1.1.1p1
MPE_PATH   =

#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the MPICH wrappers around the compilers -- these will automatically
#   load the proper libraries and include files.  Version of MPICH prior
#   to 1.2.2 (?) do not recognize .F90 as a valid Fortran file extension.
#   You need to edit mpif90 and add .F90 to the test of filename extensions,
#   or upgrade your MPICH.
#----------------------------------------------------------------------------

FCOMP   = /opt/mpich2-1.1.1p1/bin/mpif90
CCOMP   = /opt/mpich2-1.1.1p1/bin/mpicc
CPPCOMP = /opt/mpich2-1.1.1p1/bin/mpicxx
LINK    = /opt/mpich2-1.1.1p1/bin/mpif90

# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for
#  flash_test, and is set for quick code generation, and (sometimes)
#  profiling.  The Makefile generated by setup will assign the generic token
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------


FFLAGS_OPT = -g -c -O2 -fdefault-real-8 -fdefault-double-8 \
-ffree-line-length-none -Wuninitialized

#Unfortunately gfortran is very out of date in the fedora repositories so 
#the following VERY USEFUL debugging options are not available:
#-fbacktrace -fdump-core -finit-real=nan
#Add to FFLAGS_DEBUG when fedora update gfortran to version>=4.3.3.

FFLAGS_DEBUG = -g -c -fdefault-real-8 -fdefault-double-8 \
-ffree-line-length-none -pedantic -Wall -Wextra -Wconversion -Wunderflow \
-ffpe-trap=invalid,zero,overflow -fbounds-check -fopenmp
FFLAGS_TEST = -g -c -fdefault-real-8 -fdefault-double-8 \
-ffree-line-length-none
F90FLAGS =



CFLAGS_OPT = -g -c -O2 -Wuninitialized
CFLAGS_DEBUG = -g -c -pedantic -Wall -Wextra -Winit-self -ftree-vrp \
-Wfloat-equal -Wunsafe-loop-optimizations -Wpadded
CFLAGS_TEST = -g -c


# if we are using HDF5, we need to specify the path to the include files
CFLAGS_HDF5 = -I ${HDF5_PATH}/include -DH5_USE_16_API
CFLAGS_NCMPI = -I ${NCMPI_PATH}/include

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT,
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -o
LFLAGS_DEBUG = -g -o
LFLAGS_TEST  = -o


#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

LIB_OPT   = 
LIB_DEBUG = 
LIB_TEST  =

LIB_HDF4  = 
LIB_HDF5  = -L ${HDF5_PATH}/lib -lhdf5 

LIB_PAPI  =
LIB_MATH  = 

LIB_MPI   = 
LIB_NCMPI = -L ${NCMPI_PATH}/lib -lpnetcdf
LIB_MPE   =

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =

#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo

#Configure lines for complete software stack (install in this order):
#
#mpich2-1.1.1p1:
#./configure --prefix=/opt/mpich2-1.1.1p1 --enable-error-checking=all 
#--enable-error-messages=all --enable-g=debug,meminit --enable-fast=defopt 
#--enable-f77 --enable-f90 --enable-cxx --enable-romio --enable-debuginfo 
#--enable-smpcoll --with-mpe --enable-sharedlibs=gcc 2>&1 | tee runconfig.txt
#
#hdf5-1.8.3:
#CFLAGS=-g ./configure --prefix=/opt/hdf5-1.8.3_mpich2-1.1.1p1 CC=mpicc 
#--enable-production --enable-debug=all --enable-trace --enable-parallel 
#--enable-shared --enable-static 2>&1 | tee runconfig.txt
#
#pnetcdf-1.0.3:
#./configure --prefix=/opt/pnetcdf-1.0.3_mpich2-1.1.1p1 
#--enable-fortran MPICC=mpicc CFLAGS=-g MPIF77=mpif77
