# FLASH makefile definitions for ALCF (argonne) production BG/P (intrepid)

CHOMBO_PATH = /intrepid-fs0/users/cdaley/persistent/2011/Chombo/chomboForFlash/current

#----------------------------------------------------------------------------
# Extract dimensionality from Flash.h.
# The code in this section should not need to be modified.
#----------------------------------------------------------------------------

_DIM := $(shell grep "define NDIM" Flash.h | cut -d " " -f 3)

#----------------------------------------------------------------------------
# Extract Chombo build information from the Makefile at CHOMBO_PATH.
# The code in this section should not need to be modified.
#----------------------------------------------------------------------------

_MPI := $(shell make vars DIM=${_DIM} -C ${CHOMBO_PATH}/lib | \
	 awk -F 'MPICXX=' '/^MPICXX/{print $$2}' | awk '{print $$1'})

ifeq ($(strip $(_MPI)),)
  $(error "Chombo MPICXX variable is empty")
endif

_CPP := $(shell make vars DIM=${_DIM} -C ${CHOMBO_PATH}/lib | \
	 awk -F 'CPPFLAGS=' '/^CPPFLAGS/{print $$2}')
_LIB := $(shell make vars DIM=${_DIM} -C ${CHOMBO_PATH}/lib | \
	 awk -F 'config=' '/^config/{print $$2}')
_PHDF_INC := $(shell make vars DIM=${_DIM} -C ${CHOMBO_PATH}/lib | \
	 awk -F 'HDFMPIINCFLAGS=' '/^HDFMPIINCFLAGS/{print $$2}')
_PHDF_LIB := $(shell make vars DIM=${_DIM} -C ${CHOMBO_PATH}/lib | \
	 awk -F 'HDFMPILIBFLAGS=' '/^HDFMPILIBFLAGS/{print $$2}')

#----------------------------------------------------------------------------
# Use Chombo build information to get consistent macro values for the FLASH build.
#----------------------------------------------------------------------------

MPI_PATH   := $(shell dirname $(shell which $(_MPI)))
HDF4_PATH  =
HDF5_PATH  =

ZLIB_PATH  =

PAPI_PATH  =
PAPI_FLAGS =

FISHPAK_PATH =

NCMPI_PATH = /bgusr/robl/soft/pnetcdf-20071019
MPE_PATH   =



#----------------------------------------------------------------------------
# Compiler and linker commands
#
#  We use the f90 compiler as the linker, so some C libraries may explicitly
#  need to be added into the link line.
#----------------------------------------------------------------------------

FCOMP   = ${MPI_PATH}/mpixlf2003_r
CCOMP   = ${MPI_PATH}/mpixlc_r
CPPCOMP = ${MPI_PATH}/mpixlcxx_r
LINK    = ${MPI_PATH}/mpixlf2003_r


#-----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized code
#  code ("-opt"), one for debugging ("-debug"), and one for testing ("-test").
#  Passing these flags to the setup script will cause the value associated with
#  the corresponding keys (i.e. those ending in "_OPT", "_DEBUG", or "_TEST") to
#  be incorporated into the final Makefile. For example, passing "-opt" to the
#  setup script will cause the flags following "FFLAGS_OPT" to be assigned to
#  "FFLAGS" in the final Makefile. If none of these flags are passed, the default
#  behavior will match that of the "-opt" flag.
#  In general, "-opt" is meant to optimize compilation and linking. "-debug"
#  should enable runtime bounds checking, debugger symbols, and other compiler-
#  specific debugging options. "-test" is useful for testing different
#  combinations of compiler flags particular to your individual system.
#----------------------------------------------------------------------------

FFLAGS_OPT   = -g -O2 -qintsize=4 -qrealsize=8 -qfixed -qnosave -c \
               -qinline -qmaxmem=16384 \
               -qsuffix=cpp=F -qarch=450 -qtune=auto -qcache=auto 
               
FFLAGS_TEST  = -g -O4 -qintsize=4 -qrealsize=8 -qfixed -qnosave -c \
               -qsuffix=cpp=F -qarch=450 -qtune=auto -qcache=auto -qmaxmem=16384
              
FFLAGS_DEBUG = -O -g -qintsize=4 -qrealsize=8 -qfixed -qnosave -c \
               -qarch=450 -qmaxmem=16384

F90FLAGS     = -qsuffix=f=F90:cpp=F90 -qfree=f90
f90FLAGS     = -qsuffix=f=f90:cpp=F90 -qfree=f90

# if we are using HDF5, we need to specify the path to the include files

CFLAGS_OPT   = -g -O2 -DIBM -DNOUNDERSCORE -c \
               -qarch=450 -qtune=auto -qcache=auto -qmaxmem=16384 -D_FILE_OFFSET_BITS=64
CFLAGS_TEST  = -g -O4 -DIBM -DNOUNDERSCORE -c \
               -qarch=450 -qtune=auto -qcache=auto -qmaxmem=16384 -D_FILE_OFFSET_BITS=64
CFLAGS_DEBUG = -g  -DIBM -DNOUNDERSCORE -c \
               -qarch=450 -qmaxmem=16384 -D_FILE_OFFSET_BITS=64

CFLAGS_NCMPI = -I$(NCMPI_PATH)/include
CFLAGS_CHOMBO = -I${CHOMBO_PATH}/lib/include ${_CPP} -DCH_LANG_CC
CFLAGS_HDF5 = $(_PHDF_INC)

MDEFS = -WF,

.SUFFIXES: .o .c .f .F .h .fh .F90 .f90

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT, 
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -O2 -o 
LFLAGS_TEST  = -O4 -o
LFLAGS_DEBUG = -g -o

#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

#Ensure the library path corresponds to the current XL compiler:
#> which xlc++_r 
#/soft/apps/ibmcmp-dec2010/vacpp/bg/9.0/bin/xlc++_r

LIB_CHOMBO = -L$(CHOMBO_PATH)/lib \
-lamrtimedependent${_LIB} \
-lamrtools${_LIB} \
-lboxtools${_LIB} \
-lbasetools${_LIB} \
-L/soft/apps/ibmcmp-dec2010/vacpp/bg/9.0/lib -libmc++ -lstdc++

LIB_HDF4 =
LIB_HDF5 = $(_PHDF_LIB) -lz
LIB_PNG  = 

LIB_MPI   =
LIB_NCMPI = -L$(NCMPI_PATH)/lib -lpnetcdf
LIB_MPE   = 

LIB_FISHPAK =

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =

#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo


# make chombo_vars will print macros to screen
chombo_vars:
	@$(ECHO) "FLASH application has dimensionality:" $(_DIM)
	@$(ECHO) "Chombo MPI C++ compiler:" $(_MPI)
	@$(ECHO) "Chombo MPI path:" $(MPI_PATH)
	@$(ECHO) "Chombo include flags:" $(_CPP)
	@$(ECHO) "Chombo base library name:" $(_LIB)
	@$(ECHO) "Chombo Parallel HDF5 include flags:" $(_PHDF_INC)
	@$(ECHO) "Chombo Parallel HDF5 library flags:" $(_PHDF_LIB)
	@$(ECHO) "CFLAGS_CHOMBO:" $(CFLAGS_CHOMBO)
	@$(ECHO) "LIB_CHOMBO:" $(LIB_CHOMBO)
