# FLASH makefile definitions for x86-64 Linux (GNU compilers)
#
#----------------------------------------------------------------------------
# Set the HDF5/MPI library paths -- these need to be updated for your system
#----------------------------------------------------------------------------

MPI_PATH = /opt/mpich2/sun/1.4.1p1
HDF4_PATH =
HDF5_PATH = /opt/hdf5/sun/1.8.7

ZLIB_PATH  =

PAPI_PATH  =
PAPI_FLAGS =

NCMPI_PATH = /opt/netcdf/sun/1.2.0
MPE_PATH   =


#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the MPICH wrappers around the compilers -- these will automatically
#   load the proper libraries and include files.  Version of MPICH prior
#   to 1.2.2 (?) do not recognize .F90 as a valid Fortran file extension.
#   You need to edit mpif90 and add .F90 to the test of filename extensions,
#   or upgrade your MPICH.
#----------------------------------------------------------------------------

FCOMP   = ${MPI_PATH}/bin/mpif90
CCOMP   = ${MPI_PATH}/bin/mpicc
CPPCOMP = ${MPI_PATH}/bin/mpicxx
LINK    = ${MPI_PATH}/bin/mpif90

# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for
#  flash_test, and is set for quick code generation, and (sometimes)
#  profiling.  The Makefile generated by setup will assign the generic token
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------

OPENMP = -xopenmp=parallel
#Use the following OPENMP macro with -test and the threadchecker tool
#Run instrumented binary using  $ collect -r race ./flash4
#Post process using  $ er_print -races tha.1.er
#OPENMP = -xopenmp=noopt -xinstrument=datarace

FFLAGS_OPT = -g -c -fast \
  -xvector=simd \
  -xtarget=opteron -xarch=amdsse4a \
  -traceback=common \
  -xtypemap=real:64,double:64,integer:32 -r8const
FFLAGS_DEBUG = -g -c -C -xcheck=%all -ftrap=common \
  -traceback=common -w3 \
  -xtypemap=real:64,double:64,integer:32 -r8const
FFLAGS_TEST = ${FFLAGS_OPT} -fsimple=1

F90FLAGS =

CFLAGS_OPT = -g3 -c -fast \
  -xvector=simd -xrestrict=%all -xalias_level=strong \
  -xtarget=opteron -xarch=amdsse4a \
  -traceback=common
CFLAGS_DEBUG = -g3 -c -xcheck=%all -ftrap=common -traceback=common
CFLAGS_TEST = ${CFLAGS_OPT} -fsimple=1

# if we are using HDF5, we need to specify the path to the include files
CFLAGS_HDF5 = -I${HDF5_PATH}/include -DH5_USE_16_API
CFLAGS_NCMPI = -I${NCMPI_PATH}/include

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT,
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -g -fast -o
LFLAGS_DEBUG = -g -o
LFLAGS_TEST  = -g -o


#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

#We can link with the electric-fence library by adding -lefence, but we
#must set the following environmental variable:
#export EF_ALLOW_MALLOC_0=1
#to prevent the following abort during MPI_Init (i'm assuming this is not a bug):
#ElectricFence Aborting: Allocating 0 bytes, probably a bug
LIB_OPT   =
LIB_DEBUG =
LIB_TEST  =

LIB_HDF4  =
LIB_HDF5  = -L ${HDF5_PATH}/lib -lhdf5 -lz

LIB_PAPI  =
LIB_MATH  =

LIB_MPI   =
LIB_NCMPI = -L ${NCMPI_PATH}/lib -lpnetcdf
LIB_MPE   =

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =

#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo
