# FLASH makefile definitions for ASCI Blue Pacific machine (IBM)

#----------------------------------------------------------------------------
# Set the HDF/HDF5 and PAPI library paths 
# -- these need to be updated for your system
# If PAPI doesn't exist on your system, comment them out
#----------------------------------------------------------------------------
HDF5_PATH  = /usr/local/packages/hdf5-1.6.4-64/
HDF4_PATH  = /usr/local/packages/hdf5-1.6.5

PAPI_PATH  = /usr/local
PAPI_FLAGS = -c -I$(PAPI_PATH)/include -qsuffix=f=F90:cpp=F90 -qfree=f90 

ZLIB_PATH  =

NCMPI_PATH =
MPE_PATH   =

#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the MPICH wrappers around the compilers -- these will automatically
#   load the proper libraries and include files.  Version of MPICH prior
#   to 1.2.2 (?) do not recognize .F90 as a valid Fortran file extension.
#   You need to edit mpif90 and add .F90 to the test of filename extensions,
#   or upgrade your MPICH.
#----------------------------------------------------------------------------
ifdef PDTDIR
OPT=-optTauSelectFile="select.tau" -optVerbose -optPDBFile="merged.pdb" -optKeepFiles
endif

FCOMP   = $(TAU_COMPILER) $(OPT) mpxlf90_r
CCOMP   = $(TAU_COMPILER) mpcc 
CPPCOMP = $(TAU_COMPILER) mpCC		# ??
LINK    = $(TAU_COMPILER) mpxlf90

LIB_MPI = 
# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the 
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for 
#  flash_test, and is set for quick code generation, and (sometimes) 
#  profiling.  The Makefile generated by setup will assign the generic token 
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------

FFLAGS_OPT   = -O3 -qmaxmem=-1 -qintsize=4 -qrealsize=8 -c -qnosave -q64 \
               -qstrict -qinline -qtune=auto -qcache=auto -qlistopt \
               -qsuffix=cpp=F  -qfixed  -I$(HDF5_PATH)/include/ -qxlf90=autodealloc

# qhot causes problems with 2.0
# -qhot -qcache=auto

FFLAGS_DEBUG = -g -qintsize=4 -qrealsize=8 -q64 -cpp -qfixed -c  -qzerosize # -I$(HDF5_PATH)/include/
FFLAGS_TEST  =

F90FLAGS     = -qsuffix=f=F90:cpp=F90 -qfree=f90
f90FLAGS     = -qsuffix=f=f90:cpp=F90 -qfree=f90


# if we are using HDF5, we need to specify the path to the include files
CFLAGS_HDF5  = -I$(HDF5_PATH)/include/ -DNOUNDERSCORE

CFLAGS_OPT   = -c -O3 -qcache=auto -qtune=auto -DIBM $(CFLAGS_HDF5) -I$(HDF5_PATH)/include -DNOUNDERSCORE -q64
CFLAGS_DEBUG = -g -c -DIBM $(CFLAGS_HDF5) -I$(HDF5_PATH)/include -q64
CFLAGS_TEST  =

CFLAGS_HDF5  =
CFLAGS_NCMPI =

MDEFS = -WF,

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT, 
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

#  Linker flags for optimization
LFLAGS_OPT   = -bmaxdata:0x80000000 -q64 -o

#  Linker flags for debugging
LFLAGS_DEBUG = -bmaxdata:0x80000000 -q64 -o

LFLAGS_TEST  = -bmaxdata:0x80000000 -o

#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

LIB_HDF4  = -L$(HDF4_PATH)/lib -lmfhdf -ldf -lz 
LIB_HDF5  = -L$(HDF5_PATH)/lib -lhdf5 -L/usr/local/packages/zlib-1.2.3-64/lib -lz 
LIB_PAPI  = -L$(PAPI_PATH)/lib -lpapi -L/usr/lpp/pmtoolkit/lib -lpmapi
LIB_MATH  = -lessl

LIB_OPT   = 
LIB_DEBUG =
LIB_TEST  =

LIB_NCMPI =
LIB_MPE   =

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ = 

#----------------------------------------------------------------------------
# Additional commands
#---------------------------------------------------------------------------- 

MV   = mv -f
AR   = ar -r
RM   = rm -f
CD   = cd
RL   = ranlib
ECHO = echo
