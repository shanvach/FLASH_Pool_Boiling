# FLASH makefile definitions for x86-64 Linux (GNU compilers)
#
#----------------------------------------------------------------------------
# Set the HDF5/MPI library paths -- these need to be updated for your system
#----------------------------------------------------------------------------

MPI_PATH = /opt/mpich2-1.3.2p1_gnu
HDF4_PATH =
HDF5_PATH = /opt/hdf5-1.8.5_patch1_gnu

HYPRE_PATH = /opt/hypre-2.7.0b_gnu

ZLIB_PATH  =

PAPI_PATH  =
PAPI_FLAGS =

NCMPI_PATH = /opt/parallel-netcdf-1.2.0_gnu
MPE_PATH   =

#----------------------------------------------------------------------------
# Compiler and linker commands
#
#   Use the MPICH wrappers around the compilers -- these will automatically
#   load the proper libraries and include files.  Version of MPICH prior
#   to 1.2.2 (?) do not recognize .F90 as a valid Fortran file extension.
#   You need to edit mpif90 and add .F90 to the test of filename extensions,
#   or upgrade your MPICH.
#----------------------------------------------------------------------------

FCOMP   = ${MPI_PATH}/bin/mpif90
CCOMP   = ${MPI_PATH}/bin/mpicc
CPPCOMP = ${MPI_PATH}/bin/mpicxx
LINK    = ${MPI_PATH}/bin/mpif90

# pre-processor flag
PP      = -D

#----------------------------------------------------------------------------
# Compilation flags
#
#  Three sets of compilation/linking flags are defined: one for optimized
#  code, one for testing, and one for debugging.  The default is to use the
#  _OPT version.  Specifying -debug to setup will pick the _DEBUG version,
#  these should enable bounds checking.  Specifying _TEST is used for
#  flash_test, and is set for quick code generation, and (sometimes)
#  profiling.  The Makefile generated by setup will assign the generic token
#  (ex. FFLAGS) to the proper set of flags (ex. FFLAGS_OPT).
#----------------------------------------------------------------------------

OPENMP = -fopenmp
FFLAGS_OPT = -ggdb -c -O2 -fdefault-real-8 -fdefault-double-8 \
-Wuninitialized

FFLAGS_DEBUG = -ggdb -c -fdefault-real-8 -fdefault-double-8 \
-pedantic -Wall -Wextra -Waliasing \
-Wsurprising -Wconversion -Wunderflow \
-ffpe-trap=invalid,zero,overflow -fbounds-check \
-fimplicit-none
#-finit-integer=-999999 \
#-fbacktrace -fdump-core -finit-real=nan \

FFLAGS_TEST = -ggdb -c -fdefault-real-8 -fdefault-double-8 \
-ffree-line-length-none

FFLAGS_HYPRE = -I${HYPRE_PATH}/include
CFLAGS_HYPRE = -I${HYPRE_PATH}/include

F90FLAGS =


CFLAGS_OPT = -ggdb -c -O2 -Wuninitialized

CFLAGS_DEBUG = -ggdb -c -Wno-div-by-zero -Wundef \
-Wconversion -Wstrict-prototypes -Wunreachable-code \
-pedantic -Wall -Wextra -Winit-self -ftree-vrp -Wfloat-equal \
-Wunsafe-loop-optimizations -Wpadded -fstack-check -fstack-protector-all \
#-Wtype-limits 

CFLAGS_TEST = -ggdb -c


# if we are using HDF5, we need to specify the path to the include files
CFLAGS_HDF5 = -I ${HDF5_PATH}/include -DH5_USE_16_API
CFLAGS_NCMPI = -I ${NCMPI_PATH}/include

#----------------------------------------------------------------------------
# Linker flags
#
#  There is a seperate version of the linker flags for each of the _OPT,
#  _DEBUG, and _TEST cases.
#----------------------------------------------------------------------------

LFLAGS_OPT   = -ggdb -o
LFLAGS_DEBUG = -ggdb -o
LFLAGS_TEST  = -ggdb -o

LIB_HYPRE = -L${HYPRE_PATH}/lib -lHYPRE

#----------------------------------------------------------------------------
# Library specific linking
#
#  If a FLASH module has a 'LIBRARY xxx' line in its Config file, we need to
#  create a macro in this Makefile.h for LIB_xxx, which will be added to the
#  link line when FLASH is built.  This allows us to switch between different
#  (incompatible) libraries.  We also create a _OPT, _DEBUG, and _TEST
#  library macro to add any performance-minded libraries (like fast math),
#  depending on how FLASH was setup.
#----------------------------------------------------------------------------

LIB_OPT   = 
LIB_DEBUG = 
LIB_TEST  =

LIB_HDF4  = 
LIB_HDF5  = -L ${HDF5_PATH}/lib -lhdf5 -lz

LIB_PAPI  =
LIB_MATH  = 

LIB_MPI   = 
LIB_NCMPI = -L ${NCMPI_PATH}/lib -lpnetcdf
LIB_MPE   =

#----------------------------------------------------------------------------
# Additional machine-dependent object files
#
#  Add any machine specific files here -- they will be compiled and linked
#  when FLASH is built.
#----------------------------------------------------------------------------

MACHOBJ =

#----------------------------------------------------------------------------
# Additional commands
#----------------------------------------------------------------------------

MV = mv -f
AR = ar -r
RM = rm -f
CD = cd
RL = ranlib
ECHO = echo

ifeq ($(FLASHBINARY),true)
#----------------------------------------------------------------------------
# Fake existence of iso_c_bindings module to prevent unnecessary recompilations.
#---------------------------------------------------------------------------- 
iso_c_binding.mod :
	touch $@

#For now we just remove OpenMP compilation option for hy_uhd_getFaceFlux.F90
#to avoid the following compiler error:
#hy_uhd_getFaceFlux.F90:1247: internal compiler error: Segmentation fault
#Please submit a full bug report,
#with preprocessed source if appropriate.
#See <URL:http://bugzilla.redhat.com/bugzilla> for instructions.
#make: *** [hy_uhd_getFaceFlux.o] Error 1

#-frecursive is not available in gfortran-4.1.2.
FFLAGS_WO_OPENMP = $(patsubst $(OPENMP),-fmax-stack-var-size=9999999999999,$(FFLAGS))
hy_uhd_getFaceFlux.o : %.o : %.F90
	$(FCOMP) $(FFLAGS_WO_OPENMP) $(F90FLAGS) $(FDEFINES)	$<

endif

#Configure lines:
#
# mpich2-1.2.1p1:
#./configure --prefix=/opt/mpich2/1.2.1p1/gcc-4.4.3
#--enable-error-checking=all --enable-error-messages=all 
#--with-pm=gforker:mpd --enable-g=dbg,meminit --enable-fast=defopt 
#--enable-f77 --enable-f90 --enable-cxx --enable-romio --enable-sharedlibs=gcc 
#--with-mpe CC=gcc F77=gfortran F90=gfortran CXX=g++ 2>&1 | tee ../mpich2_1.2.1p1_gcc-4.4.3_build.out
#
# hdf5-1.8.4-patch1:
#./configure --prefix=/opt/hdf5/1.8.4-patch1/gcc-4.4.3 
#CC=mpicc FC=mpif90 CXX=mpicxx --enable-production --enable-debug=all --enable-shared
#--enable-parallel --enable-using-memchecker 2>&1 | tee ../hdf5_1.8.4-patch1_gcc-4.4.3_build.out
#
# parallel-netcdf-1.1.1:
#./configure --prefix=/opt/parallel-netcdf/1.1.1/gcc-4.4.3 
#--enable-fortran --with-mpi=/opt/mpich2/1.2.1p1/gcc-4.4.3 
#CFLAGS="${CFLAGS} -g" 2>&1 | tee ../parallel-netcdf-1.1.1_gcc-4.4.3_build.out
#
# valgrind-3.5.0: (Need to patch because we have a new version of glibc)
#patch -Np0 -i ../valgrind_glibc211.diff || return 1
#autoreconf
#./configure --prefix=/opt/valgrind/3.5.0/gcc-4.4.3
#--without-mpicc 2>&1 | tee ../valgrind-3.5.0_gcc-4.4.3_build.out
